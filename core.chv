## Copyright 2010 Gregory L. Rosenblatt

## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at

##     http://www.apache.org/licenses/LICENSE-2.0

## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.

#def-op (:) infix right 5
#def hd (#proc (xs) (#node-unpack (:) 0 xs))
#def tl (#proc (xs) (#node-unpack (:) 1 xs))
#def synclo-form (#proc (sc) (#node-unpack SynClo 2 sc))
#def testSwitch
  #switch (1:2:Nil)
    (((Nil) 3) ((\:) 4))
#def #quote-sym (Macro (#proc (ctx form)
  ((SynClo (#ctx) Nil (Symbol (#unbox Symbol))):
   ((SynClo (#ctx) Nil (Symbol (#unbox #unbox))):(hd (tl form)):Nil):Nil)))
#def #quote
  #proc (xs)
    #switch xs
      ((() xs)
       ((Symbol) ((SynClo (#ctx) Nil (#quote-sym #quote-sym)):xs:Nil))
       ((Nil) (SynClo (#ctx) Nil (#quote-sym Nil)))
       ((\:) ((SynClo (#ctx) Nil (#quote-sym \:)):
              (#quote (hd xs)):(#quote (tl xs)):Nil))
       ((SynClo) (#quote (synclo-form xs))))
#def quote (Macro (#proc (ctx form) (#quote (hd (tl form)))))
#def squote (Macro (#proc (ctx form)
  ((SynClo (#ctx) Nil (quote SynClo)):(SynClo (#ctx) Nil (quote (#ctx))):
   (SynClo (#ctx) Nil (quote Nil)):
   ((SynClo (#ctx) Nil (quote quote)):(hd (tl form)):Nil):Nil)))
#def #def-macro (Macro (#proc (ctx form)
  ((squote #def):(hd (tl form)):
   ((squote Macro):((squote #proc):(tl (tl form))):Nil):Nil)))
#def-macro #def-proc (ctx form)
  ((squote #def):(hd (tl form)):((squote #proc):(tl (tl form))):Nil)
#def-proc id (x) x
#def-proc rev-append (xs ys)
  #switch ys
    (((Nil) xs)
     ((\:) (rev-append (hd ys:xs) (tl ys))))
#def-proc reverse (xs) (rev-append Nil xs)
#def-proc map (f xs)
  #switch xs
    (((Nil) Nil)
     ((\:) (f (hd xs):map f (tl xs))))
#def-proc #ns-env (ns) (hd (#ctx-env (#ns-ctx ns)))
#def-macro #globals (ctx form)
  ((squote #ns-env):((squote #ctx-ns):(quote (#ctx)):Nil):Nil)
#def-macro #locals (ctx form) ((squote #ctx-env):(quote (#ctx)):Nil)
